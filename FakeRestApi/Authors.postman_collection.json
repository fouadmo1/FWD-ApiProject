{
	"info": {
		"_postman_id": "dc0e39a4-a8a7-4bb1-9435-ce149f89e5c2",
		"name": "Authors",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19732867"
	},
	"item": [
		{
			"name": "Get authors",
			"item": [
				{
					"name": "Return All Authors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var obj_nums = pm.response.json().length;\r",
									"var rand_num = Math.floor(Math.random()*obj_nums);\r",
									"pm.test(\"Check if status code is 200\", function(){\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"pm.test(\"Check the objects in response body\",function(){\r",
									"    var JsonData = pm.response.json();\r",
									"    pm.expect(JsonData[rand_num]).to.have.all.keys('id','idBook','firstName','firstName');\r",
									"});\r",
									"\r",
									"pm.test(\"Check response header value\",function(){\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json;\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/api/v1/Authors",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Author using idBook",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check response code is 200\",function(){\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/api/v1/Authors/authors/books/1",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"Authors",
								"authors",
								"books",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Author using Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if the response code is 200\",function(){\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/api/v1/Authors/1",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"Authors",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update Authors",
			"item": [
				{
					"name": "Create new Author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if status code is 201 Created\", function(){\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"    pm.expect(pm.response.body).to.equal(\"Created\");\r",
									"});\r",
									"pm.test(\"Response Body contains firstname and lastname\",function(){\r",
									"    pm.expect(pm.response.json()).to.have.all.keys(\"firstName\",\"lastName\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 10000,\r\n  \"idBook\": 10000,\r\n  \"firstName\": \"sssag\",\r\n  \"lastName\": \"stsasng\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/api/v1/Authors",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "update existing author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if status code is 200\", function(){\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 1,\r\n  \"idBook\": 1,\r\n  \"firstName\": \"string\",\r\n  \"lastName\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/api/v1/Authors/1",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"Authors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check if author updated successfully",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if first name and lastname of id 1 changed\",function(){\r",
									"    pm.expect(pm.response.json().firstName).contain(\"string\")\r",
									"    pm.expect(pm.response.json().lastName).contain(\"string\")\r",
									"    \r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/api/v1/Authors/1",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"Authors",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete Authors",
			"item": [
				{
					"name": "New Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check if status code is 200\", function(){\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/api/v1/Authors/2",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"Authors",
								"2"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}